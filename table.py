import asyncio
from pathlib import Path
from jinja2 import Environment, FileSystemLoader, select_autoescape

from gobexec.goblint.bench import txtindex
from gobexec.model.benchmark import Single
from gobexec.model.scenario import Matrix
from gobexec.model.tool import Tool


class EchoTool(Tool):
    def run(self, benchmark: Single) -> str:
        return benchmark.name


index = txtindex.Index.from_path(Path("/home/simmo/dev/goblint/sv-comp/goblint-bench/index/traces-rel-toy.txt"))
matrix = index.to_matrix()

results = [[['1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1', '1, 0, 1'], ['1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0']], [['1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0']], [['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0']], [['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0']], [['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0']], [['3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0', '3, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0']], [['1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0', '1, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0'], ['2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0', '2, 0, 0']]]

env = Environment(
    loader=FileSystemLoader("./templates"),
    autoescape=select_autoescape()
)
template = env.get_template("matrix.html")
with open("out.html", "w") as outfile:
    outfile.write(template.render(matrix=matrix,results=results))
